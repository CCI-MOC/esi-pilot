"create_bgpvpn": "rule:admin_only"
"update_bgpvpn": "rule:admin_or_owner"
"update_bgpvpn:tenant_id": "rule:admin_only"
"update_bgpvpn:route_targets": "rule:admin_only"
"update_bgpvpn:import_targets": "rule:admin_only"
"update_bgpvpn:export_targets": "rule:admin_only"
"update_bgpvpn:route_distinguishers": "rule:admin_only"
"update_bgpvpn:vni": "rule:admin_only"
"delete_bgpvpn": "rule:admin_only"
"get_bgpvpn": "rule:admin_or_owner"
"get_bgpvpn:tenant_id": "rule:admin_only"
"get_bgpvpn:route_targets": "rule:admin_only"
"get_bgpvpn:import_targets": "rule:admin_only"
"get_bgpvpn:export_targets": "rule:admin_only"
"get_bgpvpn:route_distinguishers": "rule:admin_only"
"get_bgpvpn:vni": "rule:admin_only"
"create_bgpvpn_network_association": "rule:admin_or_owner"
"update_bgpvpn_network_association": "rule:admin_or_owner"
"delete_bgpvpn_network_association": "rule:admin_or_owner"
"get_bgpvpn_network_association": "rule:admin_or_owner"
"get_bgpvpn_network_association:tenant_id": "rule:admin_only"
"create_bgpvpn_router_association": "rule:admin_or_owner"
"update_bgpvpn_router_association": "rule:admin_or_owner"
"delete_bgpvpn_router_association": "rule:admin_or_owner"
"get_bgpvpn_router_association": "rule:admin_or_owner"
"get_bgpvpn_router_association:tenant_id": "rule:admin_only"
"create_bgpvpn_port_association": "rule:admin_or_owner"
"update_bgpvpn_port_association": "rule:admin_or_owner"
"delete_bgpvpn_port_association": "rule:admin_or_owner"
"get_bgpvpn_port_association": "rule:admin_or_owner"
"get_bgpvpn_port_association:tenant_id": "rule:admin_only"
"create_flow_classifier": "rule:regular_user"
"update_flow_classifier": "rule:admin_or_owner"
"delete_flow_classifier": "rule:admin_or_owner"
"get_flow_classifier": "rule:admin_or_owner"
"create_port_chain": "rule:regular_user"
"update_port_chain": "rule:admin_or_owner"
"delete_port_chain": "rule:admin_or_owner"
"get_port_chain": "rule:admin_or_owner"
"create_port_pair_group": "rule:regular_user"
"update_port_pair_group": "rule:admin_or_owner"
"delete_port_pair_group": "rule:admin_or_owner"
"get_port_pair_group": "rule:admin_or_owner"
"create_port_pair": "rule:regular_user"
"update_port_pair": "rule:admin_or_owner"
"delete_port_pair": "rule:admin_or_owner"
"get_port_pair": "rule:admin_or_owner"
"create_service_graph": "rule:regular_user"
"update_service_graph": "rule:admin_or_owner"
"delete_service_graph": "rule:admin_or_owner"
"get_service_graph": "rule:admin_or_owner"
"context_is_admin": "role:admin"
"owner": "tenant_id:%(tenant_id)s"
"admin_or_owner": "rule:context_is_admin or rule:owner"
"context_is_advsvc": "role:advsvc"
"admin_or_network_owner": "rule:context_is_admin or tenant_id:%(network:tenant_id)s"
"admin_owner_or_network_owner": "rule:owner or rule:admin_or_network_owner"
"network_owner": "tenant_id:%(network:tenant_id)s"
"admin_only": "rule:context_is_admin"
"regular_user": ""
"shared": "field:networks:shared=True"
"default": "rule:admin_or_owner"
"admin_or_ext_parent_owner": "rule:context_is_admin or tenant_id:%(ext_parent:tenant_id)s"
"ext_parent_owner": "tenant_id:%(ext_parent:tenant_id)s"
"sg_owner": "tenant_id:%(security_group:tenant_id)s"
"shared_address_groups": "field:address_groups:shared=True"
"get_address_group": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s) or rule:shared_address_groups"
"shared_address_scopes": "field:address_scopes:shared=True"
"create_address_scope": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"create_address_scope:shared": "role:admin and system_scope:all"
"get_address_scope": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s) or rule:shared_address_scopes"
"update_address_scope": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"update_address_scope:shared": "role:admin and system_scope:all"
"delete_address_scope": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"get_agent": "role:reader and system_scope:all"
"update_agent": "role:admin and system_scope:all"
"delete_agent": "role:admin and system_scope:all"
"create_dhcp-network": "role:admin and system_scope:all"
"get_dhcp-networks": "role:reader and system_scope:all"
"delete_dhcp-network": "role:admin and system_scope:all"
"create_l3-router": "role:admin and system_scope:all"
"get_l3-routers": "role:reader and system_scope:all"
"delete_l3-router": "role:admin and system_scope:all"
"get_dhcp-agents": "role:reader and system_scope:all"
"get_l3-agents": "role:reader and system_scope:all"
"get_auto_allocated_topology": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s)"
"delete_auto_allocated_topology": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"get_availability_zone": "role:reader and system_scope:all"
"create_flavor": "role:admin and system_scope:all"
"get_flavor": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s)"
"update_flavor": "role:admin and system_scope:all"
"delete_flavor": "role:admin and system_scope:all"
"create_service_profile": "role:admin and system_scope:all"
"get_service_profile": "role:reader and system_scope:all"
"update_service_profile": "role:admin and system_scope:all"
"delete_service_profile": "role:admin and system_scope:all"
"get_flavor_service_profile": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s)"
"create_flavor_service_profile": "role:admin and system_scope:all"
"delete_flavor_service_profile": "role:admin and system_scope:all"
"create_floatingip": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"create_floatingip:floating_ip_address": "role:admin and system_scope:all"
"get_floatingip": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s)"
"update_floatingip": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"delete_floatingip": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"get_floatingip_pool": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s)"
"create_floatingip_port_forwarding": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s) or rule:ext_parent_owner"
"get_floatingip_port_forwarding": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s) or rule:ext_parent_owner"
"update_floatingip_port_forwarding": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s) or rule:ext_parent_owner"
"delete_floatingip_port_forwarding": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s) or rule:ext_parent_owner"
"create_router_conntrack_helper": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s) or rule:ext_parent_owner"
"get_router_conntrack_helper": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s) or rule:ext_parent_owner"
"update_router_conntrack_helper": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s) or rule:ext_parent_owner"
"delete_router_conntrack_helper": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s) or rule:ext_parent_owner"
"get_loggable_resource": "role:reader and system_scope:all"
"create_log": "role:admin and system_scope:all"
"get_log": "role:reader and system_scope:all"
"update_log": "role:admin and system_scope:all"
"delete_log": "role:admin and system_scope:all"
"create_metering_label": "role:admin and system_scope:all"
"get_metering_label": "role:reader and system_scope:all"
"delete_metering_label": "role:admin and system_scope:all"
"create_metering_label_rule": "role:admin and system_scope:all"
"get_metering_label_rule": "role:reader and system_scope:all"
"delete_metering_label_rule": "role:admin and system_scope:all"
"external": "field:networks:router:external=True"
#"create_network": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"create_network": ""
"create_network:shared": "role:admin and system_scope:all"
"create_network:router:external": "role:admin and system_scope:all"
"create_network:is_default": "role:admin and system_scope:all"
"create_network:port_security_enabled": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"create_network:segments": "role:admin and system_scope:all"
#"create_network:provider:network_type": "role:admin and system_scope:all"
"create_network:provider:network_type": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
#"create_network:provider:physical_network": "role:admin and system_scope:all"
"create_network:provider:physical_network": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"create_network:provider:segmentation_id": "role:admin and system_scope:all"
"get_network": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s) or rule:shared or rule:external or rule:context_is_advsvc or rule:admin_or_owner"
"get_network:router:external": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s)"
"get_network:segments": "role:reader and system_scope:all"
"get_network:provider:network_type": "role:reader and system_scope:all"
"get_network:provider:physical_network": "role:reader and system_scope:all"
#"get_network:provider:segmentation_id": "role:reader and system_scope:all"
"get_network:provider:segmentation_id": ""
"update_network": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"update_network:segments": "role:admin and system_scope:all"
"update_network:shared": "role:admin and system_scope:all"
"update_network:provider:network_type": "role:admin and system_scope:all"
"update_network:provider:physical_network": "role:admin and system_scope:all"
"update_network:provider:segmentation_id": "role:admin and system_scope:all"
"update_network:router:external": "role:admin and system_scope:all"
"update_network:is_default": "role:admin and system_scope:all"
"update_network:port_security_enabled": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
#"delete_network": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"delete_network": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s) or rule:admin_or_owner"
"get_network_ip_availability": "role:reader and system_scope:all"
"create_network_segment_range": "role:admin and system_scope:all"
"get_network_segment_range": "role:reader and system_scope:all"
"update_network_segment_range": "role:admin and system_scope:all"
"delete_network_segment_range": "role:admin and system_scope:all"
"network_device": "field:port:device_owner=~^network:"
"admin_or_data_plane_int": "rule:context_is_admin or role:data_plane_integrator"
"create_port": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"create_port:device_owner": "not rule:network_device or role:admin and system_scope:all or role:admin and project_id:%(project_id)s or rule:context_is_advsvc or rule:network_owner"
"create_port:mac_address": "rule:context_is_advsvc or rule:network_owner or role:admin and system_scope:all or role:admin and project_id:%(project_id)s"
"create_port:fixed_ips": "rule:context_is_advsvc or rule:network_owner or role:admin and system_scope:all or role:admin and project_id:%(project_id)s or rule:shared"
"create_port:fixed_ips:ip_address": "rule:context_is_advsvc or rule:network_owner or role:admin and system_scope:all or role:admin and project_id:%(project_id)s"
"create_port:fixed_ips:subnet_id": "rule:context_is_advsvc or rule:network_owner or role:admin and system_scope:all or role:admin and project_id:%(project_id)s or rule:shared"
"create_port:port_security_enabled": "rule:context_is_advsvc or rule:network_owner or role:admin and system_scope:all or role:admin and project_id:%(project_id)s"
"create_port:binding:host_id": "role:admin and system_scope:all or (role:member and project_id:%(project_id)s)"
"create_port:binding:profile": "role:admin and system_scope:all"
"create_port:binding:vnic_type": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"create_port:allowed_address_pairs": "role:admin and system_scope:all or role:admin and project_id:%(project_id)s or rule:network_owner"
"create_port:allowed_address_pairs:mac_address": "role:admin and system_scope:all or role:admin and project_id:%(project_id)s or rule:network_owner"
"create_port:allowed_address_pairs:ip_address": "role:admin and system_scope:all or role:admin and project_id:%(project_id)s or rule:network_owner"
"get_port": "rule:context_is_advsvc or (role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s)"
"get_port:binding:vif_type": "role:reader and system_scope:all"
"get_port:binding:vif_details": "role:reader and system_scope:all"
"get_port:binding:host_id": "role:reader and system_scope:all"
"get_port:binding:profile": "role:reader and system_scope:all"
"get_port:resource_request": "role:reader and system_scope:all"
"update_port": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s) or rule:context_is_advsvc"
"update_port:device_owner": "not rule:network_device or rule:context_is_advsvc or rule:network_owner or role:admin and system_scope:all or role:admin and project_id:%(project_id)s"
"update_port:mac_address": "role:admin and system_scope:all or rule:context_is_advsvc"
"update_port:fixed_ips": "rule:context_is_advsvc or rule:network_owner or role:admin and system_scope:all or role:admin and project_id:%(project_id)s"
"update_port:fixed_ips:ip_address": "rule:context_is_advsvc or rule:network_owner or role:admin and system_scope:all or role:admin and project_id:%(project_id)s"
"update_port:fixed_ips:subnet_id": "rule:context_is_advsvc or rule:network_owner or role:admin and system_scope:all or role:admin and project_id:%(project_id)s or rule:shared"
"update_port:port_security_enabled": "rule:context_is_advsvc or rule:network_owner or role:admin and system_scope:all or role:admin and project_id:%(project_id)s"
"update_port:binding:host_id": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"update_port:binding:profile": "role:admin and system_scope:all"
"update_port:binding:vnic_type": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s) or rule:context_is_advsvc"
"update_port:allowed_address_pairs": "role:admin and system_scope:all or role:admin and project_id:%(project_id)s or rule:network_owner"
"update_port:allowed_address_pairs:mac_address": "role:admin and system_scope:all or role:admin and project_id:%(project_id)s or rule:network_owner"
"update_port:allowed_address_pairs:ip_address": "role:admin and system_scope:all or role:admin and project_id:%(project_id)s or rule:network_owner"
"update_port:data_plane_status": "role:admin and system_scope:all or role:data_plane_integrator"
"delete_port": "rule:context_is_advsvc or (role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"get_policy": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s)"
"create_policy": "role:admin and system_scope:all"
"update_policy": "role:admin and system_scope:all"
"delete_policy": "role:admin and system_scope:all"
"get_rule_type": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s)"
"get_policy_bandwidth_limit_rule": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s)"
"create_policy_bandwidth_limit_rule": "role:admin and system_scope:all"
"update_policy_bandwidth_limit_rule": "role:admin and system_scope:all"
"delete_policy_bandwidth_limit_rule": "role:admin and system_scope:all"
"get_policy_dscp_marking_rule": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s)"
"create_policy_dscp_marking_rule": "role:admin and system_scope:all"
"update_policy_dscp_marking_rule": "role:admin and system_scope:all"
"delete_policy_dscp_marking_rule": "role:admin and system_scope:all"
"get_policy_minimum_bandwidth_rule": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s)"
"create_policy_minimum_bandwidth_rule": "role:admin and system_scope:all"
"update_policy_minimum_bandwidth_rule": "role:admin and system_scope:all"
"delete_policy_minimum_bandwidth_rule": "role:admin and system_scope:all"
"get_alias_bandwidth_limit_rule": "rule:get_policy_bandwidth_limit_rule"
"update_alias_bandwidth_limit_rule": "rule:update_policy_bandwidth_limit_rule"
"delete_alias_bandwidth_limit_rule": "rule:delete_policy_bandwidth_limit_rule"
"get_alias_dscp_marking_rule": "rule:get_policy_dscp_marking_rule"
"update_alias_dscp_marking_rule": "rule:update_policy_dscp_marking_rule"
"delete_alias_dscp_marking_rule": "rule:delete_policy_dscp_marking_rule"
"get_alias_minimum_bandwidth_rule": "rule:get_policy_minimum_bandwidth_rule"
"update_alias_minimum_bandwidth_rule": "rule:update_policy_minimum_bandwidth_rule"
"delete_alias_minimum_bandwidth_rule": "rule:delete_policy_minimum_bandwidth_rule"
"get_quota": "role:reader and system_scope:all"
"update_quota": "role:admin and system_scope:all"
"delete_quota": "role:admin and system_scope:all"
"restrict_wildcard": "(not field:rbac_policy:target_tenant=*) or rule:admin_only"
#"create_rbac_policy": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"create_rbac_policy": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"create_rbac_policy:target_tenant": "role:admin and system_scope:all or rule:restrict_wildcard"
"update_rbac_policy": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"update_rbac_policy:target_tenant": "role:admin and system_scope:all or rule:restrict_wildcard"
"get_rbac_policy": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s)"
#"delete_rbac_policy": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"delete_rbac_policy": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"create_router": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"create_router:distributed": "role:admin and system_scope:all"
"create_router:ha": "role:admin and system_scope:all"
"create_router:external_gateway_info": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"create_router:external_gateway_info:network_id": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"create_router:external_gateway_info:enable_snat": "role:admin and system_scope:all"
"create_router:external_gateway_info:external_fixed_ips": "role:admin and system_scope:all"
"get_router": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s)"
"get_router:distributed": "role:reader and system_scope:all"
"get_router:ha": "role:reader and system_scope:all"
"update_router": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"update_router:distributed": "role:admin and system_scope:all"
"update_router:ha": "role:admin and system_scope:all"
"update_router:external_gateway_info": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"update_router:external_gateway_info:network_id": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"update_router:external_gateway_info:enable_snat": "role:admin and system_scope:all"
"update_router:external_gateway_info:external_fixed_ips": "role:admin and system_scope:all"
"delete_router": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"add_router_interface": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"remove_router_interface": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"admin_or_sg_owner": "rule:context_is_admin or tenant_id:%(security_group:tenant_id)s"
"admin_owner_or_sg_owner": "rule:owner or rule:admin_or_sg_owner"
"create_security_group": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"get_security_group": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s)"
"update_security_group": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"delete_security_group": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"create_security_group_rule": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"get_security_group_rule": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s) or rule:sg_owner"
"delete_security_group_rule": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"create_segment": "role:admin and system_scope:all"
"get_segment": "role:reader and system_scope:all"
"update_segment": "role:admin and system_scope:all"
"delete_segment": "role:admin and system_scope:all"
"get_service_provider": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s)"
"create_subnet": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s) or rule:network_owner"
"create_subnet:segment_id": "role:admin and system_scope:all"
"create_subnet:service_types": "role:admin and system_scope:all"
"get_subnet": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s) or rule:shared"
"get_subnet:segment_id": "role:reader and system_scope:all"
"update_subnet": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s) or rule:network_owner"
"update_subnet:segment_id": "role:admin and system_scope:all"
"update_subnet:service_types": "role:admin and system_scope:all"
"delete_subnet": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s) or rule:network_owner"
"shared_subnetpools": "field:subnetpools:shared=True"
"create_subnetpool": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"create_subnetpool:shared": "role:admin and system_scope:all"
"create_subnetpool:is_default": "role:admin and system_scope:all"
"get_subnetpool": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s) or rule:shared_subnetpools"
"update_subnetpool": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"update_subnetpool:is_default": "role:admin and system_scope:all"
"delete_subnetpool": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"onboard_network_subnets": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"add_prefixes": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"remove_prefixes": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"create_trunk": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"get_trunk": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s)"
"update_trunk": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"delete_trunk": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"get_subports": "(role:reader and system_scope:all) or (role:reader and project_id:%(project_id)s)"
"add_subports": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"remove_subports": "(role:admin and system_scope:all) or (role:member and project_id:%(project_id)s)"
"create_bgp_speaker": "rule:admin_only"
"update_bgp_speaker": "rule:admin_only"
"delete_bgp_speaker": "rule:admin_only"
"get_bgp_speaker": "rule:admin_only"
"add_bgp_peer": "rule:admin_only"
"remove_bgp_peer": "rule:admin_only"
"add_gateway_network": "rule:admin_only"
"remove_gateway_network": "rule:admin_only"
"get_advertised_routes": "rule:admin_only"
"create_bgp_peer": "rule:admin_only"
"update_bgp_peer": "rule:admin_only"
"delete_bgp_peer": "rule:admin_only"
"get_bgp_peer": "rule:admin_only"
"add_bgp_speaker_to_dragent": "rule:admin_only"
"remove_bgp_speaker_from_dragent": "rule:admin_only"
"list_bgp_speaker_on_dragent": "rule:admin_only"
"list_dragent_hosting_bgp_speaker": "rule:admin_only"
"create_endpoint_group": "rule:regular_user"
"update_endpoint_group": "rule:admin_or_owner"
"delete_endpoint_group": "rule:admin_or_owner"
"get_endpoint_group": "rule:admin_or_owner"
"create_ikepolicy": "rule:regular_user"
"update_ikepolicy": "rule:admin_or_owner"
"delete_ikepolicy": "rule:admin_or_owner"
"get_ikepolicy": "rule:admin_or_owner"
"create_ipsecpolicy": "rule:regular_user"
"update_ipsecpolicy": "rule:admin_or_owner"
"delete_ipsecpolicy": "rule:admin_or_owner"
"get_ipsecpolicy": "rule:admin_or_owner"
"create_ipsec_site_connection": "rule:regular_user"
"update_ipsec_site_connection": "rule:admin_or_owner"
"delete_ipsec_site_connection": "rule:admin_or_owner"
"get_ipsec_site_connection": "rule:admin_or_owner"
"create_vpnservice": "rule:regular_user"
"update_vpnservice": "rule:admin_or_owner"
"delete_vpnservice": "rule:admin_or_owner"
"get_vpnservice": "rule:admin_or_owner"
"create_lsn": "rule:admin_only"
"get_lsn": "rule:admin_only"
"create_port:mac_learning_enabled": "rule:admin_or_network_owner or rule:context_is_advsvc"
"update_port:mac_learning_enabled": "rule:admin_or_network_owner or rule:context_is_advsvc"
"create_network_gateway": "rule:admin_or_owner"
"update_network_gateway": "rule:admin_or_owner"
"delete_network_gateway": "rule:admin_or_owner"
"get_network_gateway": "rule:admin_or_owner"
"connect_network": "rule:admin_or_owner"
"disconnect_network": "rule:admin_or_owner"
"create_gateway_device": "rule:admin_or_owner"
"update_gateway_device": "rule:admin_or_owner"
"delete_gateway_device": "rule:admin_or_owner"
"get_gateway_device": "rule:admin_or_owner"
"create_port:provider_security_groups": "rule:admin_only"
"update_port:provider_security_groups": "rule:admin_only"
"create_security_group:logging": "rule:admin_only"
"update_security_group:logging": "rule:admin_only"
"get_security_group:logging": "rule:admin_only"
"create_security_group:provider": "rule:admin_only"
"create_security_group:policy": "rule:admin_only"
"update_security_group:policy": "rule:admin_only"
"get_nsx_policy": "rule:regular_user"
"get_housekeeper": "rule:regular_user"
